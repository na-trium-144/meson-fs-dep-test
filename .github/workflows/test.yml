name: CMake Test (Linux, Many GCC Versions)

on:
  push:
    branches: [ "main" ]

jobs:
  test-linux-gcc:
    strategy:
      fail-fast: false
      matrix:
        gcc_ver: [5, 6, 7, 8, 9, 10]
        include:
        - distro: "18.04"
          gcc_ver: 5
        - distro: "18.04"
          gcc_ver: 6
        - distro: "20.04"
          gcc_ver: 7
        - distro: "20.04"
          gcc_ver: 8
        - distro: "20.04"
          gcc_ver: 9
        - distro: "20.04"
          gcc_ver: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: git clone -b cpp-filesystem-dep https://github.com/na-trium-144/meson
      - uses: addnab/docker-run-action@v3
        with:
          image: ubuntu:${{matrix.distro}}
          options: >
            -v ${{ github.workspace }}:/workspace
            -e SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
            -e DEBIAN_FRONTEND=noninteractive
            -e CC=gcc-${{matrix.gcc_ver}}
            -e CXX=g++-${{matrix.gcc_ver}}
          run: |
            set -e
            apt-get update -q -y
            apt-get install -q -y software-properties-common wget
            apt-get install -q -y build-essential gcc-${{matrix.gcc_ver}} g++-${{matrix.gcc_ver}}
            if [ ${{matrix.distro}} = "18.04" ]; then
              apt-get install -q -y python3.7 python3.7-distutils
              wget https://bootstrap.pypa.io/pip/3.7/get-pip.py
              python3.7 ./get-pip.py
              python3.7 -m pip install ninja
              alias python3=python3.7
            else
              apt-get install -q -y python3 python3-pip
              python3 -m pip install ninja
            fi
            cd /workspace
            python3 ./meson/meson.py setup build
            python3 ./meson/meson.py compile -C build
            ldd ./build/main
            ./build/main

  test-linux-clang:
    strategy:
      fail-fast: false
      matrix:
        # https://github.com/KyleMayes/install-llvm-action/blob/master/assets.json
        clang: ["5.0", "6.0", 7, 8, 9, 10]
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - run: git clone -b cpp-filesystem-dep https://github.com/na-trium-144/meson
    - uses: addnab/docker-run-action@v3
      with:
        image: ubuntu:18.04
        options: >
          -v ${{ github.workspace }}:/workspace
          -e SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
          -e DEBIAN_FRONTEND=noninteractive
          -e CC=clang-${{matrix.clang}}
          -e CXX=clang++-${{matrix.clang}}
        run: |
          set -e
          apt-get update
          apt-get install -q -y software-properties-common wget
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
          apt-add-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-${{matrix.clang}} main"
          apt-get install -q -y build-essential python3.7
          apt-get install -q -y llvm-${{matrix.clang}} clang-${{matrix.clang}} lld-${{matrix.clang}}
          apt-get install -q -y python3.7 python3.7-distutils
          wget https://bootstrap.pypa.io/pip/3.7/get-pip.py
          python3.7 ./get-pip.py
          python3.7 -m pip install ninja
          cd /workspace
          python3.7 ./meson/meson.py setup build -Dcpp_args="--stdlib=libc++" -Dlink_args="-fuse-ld=lld"
          python3.7 ./meson/meson.py compile -C build
          ldd ./build/main
          ./build/main

